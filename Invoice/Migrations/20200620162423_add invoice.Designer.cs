// <auto-generated />
using System;
using Invoice.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Invoice.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200620162423_add invoice")]
    partial class addinvoice
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Invoice.Models.InvoiceItems", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InvoiceId1")
                        .HasColumnType("int");

                    b.Property<double>("ItemDiscount")
                        .HasColumnType("float");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ItemNet")
                        .HasColumnType("float");

                    b.Property<double>("ItemPrice")
                        .HasColumnType("float");

                    b.Property<long>("ItemQuantity")
                        .HasColumnType("bigint");

                    b.Property<double>("ItemTotal")
                        .HasColumnType("float");

                    b.Property<string>("ItemUnit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId");

                    b.HasIndex("InvoiceId1");

                    b.ToTable("invoiceItems");
                });

            modelBuilder.Entity("Invoice.Models.Invoices", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("InvoiceNet")
                        .HasColumnType("float");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("InvoiceTax")
                        .HasColumnType("float");

                    b.Property<double>("InvoiceTotal")
                        .HasColumnType("float");

                    b.Property<int?>("StoreId1")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.HasIndex("StoreId1");

                    b.ToTable("invoices");
                });

            modelBuilder.Entity("Invoice.Models.Items", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoresStoreId")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("StoresStoreId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Invoice.Models.Stores", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Invoice.Models.Units", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemsItemId")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("UnitId");

                    b.HasIndex("ItemsItemId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Invoice.Models.InvoiceItems", b =>
                {
                    b.HasOne("Invoice.Models.Invoices", "InvoiceId")
                        .WithMany()
                        .HasForeignKey("InvoiceId1");
                });

            modelBuilder.Entity("Invoice.Models.Invoices", b =>
                {
                    b.HasOne("Invoice.Models.Stores", "StoreId")
                        .WithMany()
                        .HasForeignKey("StoreId1");
                });

            modelBuilder.Entity("Invoice.Models.Items", b =>
                {
                    b.HasOne("Invoice.Models.Stores", "Stores")
                        .WithMany()
                        .HasForeignKey("StoresStoreId");
                });

            modelBuilder.Entity("Invoice.Models.Units", b =>
                {
                    b.HasOne("Invoice.Models.Items", "Items")
                        .WithMany()
                        .HasForeignKey("ItemsItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
